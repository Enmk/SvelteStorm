 const searchDoc = {
    "component-format": [
      "component format",
      "format",
      "component",
      "Component",
      "Component format",
      "Component Format",
    ],
    "component-format-script": [
      "component format script",
      "component script",
      "script",
      "script tag",
    ],
    "component-format-script-1-export-creates-a-component-prop": [],
    "component-format-script-2-assignments-are-reactive": [],
    "component-format-script-3-$-marks-a-statement-as-reactive": [],
    "component-format-script-4-prefix-stores-with-$-to-access-their-values": [],
    "component-format-script-context-module": [
      "context module",
      "module",
      "context",
      "component format context module",
      "component format script context module",
    ],
    "component-format-style": ["component format style", "format style"],
    "template-syntax": ["template syntax", "template", "syntax"],
    "template-syntax-tags": [
      "template syntax tags",
      "tags",
      "template tags",
      "tag",
    ],
    "template-syntax-attributes-and-props": [
      "attritbutes and props",
      "attributes",
      "props",
      "attributes syntax",
      "props syntax",
    ],
    "template-syntax-text-expressions": [
      "text expressions",
      "template syntax text expressions",
      "text expression",
      "text expression syntax",
    ],
    "template-syntax-comments": [
      "comments",
      "comments syntax",
      "comment syntax",
      "comment",
    ],
   "template-syntax-if": [
    "{if}",
    "{@if...}",
    "{@if}",
      "{if",
      "if",
      "{#if...",
      "{#if",
      "if syntax",
      "{#if syntax",
      "{if syntax",
    ],
   "template-syntax-each": [
    "{each}",
    "{@each...}",
    "{@each}",
      "{each",
      "each",
      "{#each...",
      "{#each",
      "each syntax",
      "{#each syntax",
      "{each syntax",
    ],
   "template-syntax-await": [
    "{await}",
    "{@await...}",
    "{@await}",
      "{await",
      "await",
      "{#await...",
      "{#await",
      "await syntax",
      "{#await syntax",
      "{await syntax",
    ],
   "template-syntax-key": [
    "{key}",
    "{@key...}",
    "{@key}",
      "{key",
      "key",
      "{#key...",
      "{#key",
      "key syntax",
      "{#key syntax",
      "{key syntax",
    ],
   "template-syntax-html": [
     "{html}",
     "{@html...}",
     "{@html}",
      "{html",
      "html",
      "{@html...",
      "{@html",
      "html syntax",
      "{@html syntax",
      "{html syntax",
    ],
   "template-syntax-debug": [
    "{debug}",
    "{@debug...}",
    "{@debug}",
      "{debug",
      "debug",
      "{@debug...",
      "{@debug",
      "debug syntax",
      "{@debug syntax",
      "{debug syntax",
    ],
   "template-syntax-const": [
    "{const}",
    "{@const...}",
    "{@const}",
      "{const",
      "const",
      "{@const...",
      "{@const",
      "const syntax",
      "{@const syntax",
      "{const syntax",
    ],
    "template-syntax-element-directives": [
      "element directives",
      "directives",
      "bind",
    ],
    "template-syntax-element-directives-on-eventname": [
      "on eventname",
      "element on eventname",
      "on click",
      "on",
      "event",
      "events",
    ],
    "template-syntax-element-directives-bind-property": [
      "bind",
      "bind property",
      "binding",
      "bind syntax",
    ],
    "template-syntax-element-directives-bind-group": ["bind group"],
    "template-syntax-element-directives-bind-this": [
      "bind this",
      "this element",
    ],
    "template-syntax-element-directives-class-name": [
      "class name",
      "class",
      "element class",
    ],
    "template-syntax-element-directives-style-property": [
      "style property",
      "element directives style property",
    ],
    "template-syntax-element-directives-use-action": ["use action"],
    "template-syntax-element-directives-transition-fn": [
      "transition fn",
      "transition",
      "transition:fn",
      "transition function",
    ],
    "template-syntax-element-directives-in-fn-out-fn": [
      "in function out function",
      "in:fn out:fn",
      "in fn",
      "out fn",
    ],
    "template-syntax-element-directives-animate-fn": [
      "animate fn",
      "animate:fn",
    ],
    "template-syntax-component-directives": ["component directives"],
    "template-syntax-component-directives-on-eventname": [
      "component on eventname",
    ],
    "template-syntax-component-directives---style-props": [
      "style props",
      "component directives style props",
      "component directives style",
      "--style-props",
    ],
    "template-syntax-component-directives-bind-property": ["bind property"],
    "template-syntax-component-directives-bind-this": ["bind this"],
    "template-syntax-slot": ["slot", "slot syntax", "slots"],
    "template-syntax-slot-slot-name-name": ["slot name", "slot names"],
    "template-syntax-slot-$$slots": ["$$slots", "$$Slots", "$$slot", "$$Slot"],
    "template-syntax-slot-slot-key-value": [
      "slot key value",
      "slot key",
      "slot value",
    ],
    "template-syntax-svelte-self": [
      "<svelte self>",
      "svelte self",
      "<svelte:self>",
      "svelte:self",
    ],
    "template-syntax-svelte-component": [
      "<svelte component>",
      "svelte component",
      "<svelte:component>",
      "svelte:component",
    ],
    "template-syntax-svelte-element": [
      "<svelte element>",
      "svelte element",
      "<svelte:element>",
      "svelte:element",
    ],
    "template-syntax-svelte-window": [
      "<svelte window>",
      "svelte window",
      "<svelte:window>",
      "svelte:window",
    ],
    "template-syntax-svelte-body": [
      "<svelte body>",
      "svelte body",
      "<svelte:body>",
      "svelte:body",
    ],
    "template-syntax-svelte-head": [
      "<svelte head>",
      "svelte head",
      "<svelte:head>",
      "svelte:head",
    ],
    "template-syntax-svelte-options": [
      "<svelte options>",
      "svelte options",
      "<svelte:options>",
      "svelte:options",
    ],
    "template-syntax-svelte-fragment": [
      "<svelte fragment>",
      "svelte fragment",
      "<svelte:fragment>",
      "svelte:fragment",
    ],
    "run-time": ["run time", "run-time"],
    "run-time-svelte": ["svelte run time", "run time svelte"],
    "run-time-svelte-onmount": ["onMount", "on mount", "onmount"],
    "run-time-svelte-beforeupdate": [
      "beforeupdate",
      "before update",
      "beforeUpdate",
    ],
    "run-time-svelte-afterupdate": [
      "afterupdate",
      "after update",
      "afterUpdate",
    ],
    "run-time-svelte-ondestroy": ["onDestroy", "on destroy", "ondestroy"],
    "run-time-svelte-tick": ["tick", "svelte tick"],
    "run-time-svelte-setcontext": ["set context", "setcontext", "setContext"],
    "run-time-svelte-getcontext": ["get context", "getcontext", "getContext"],
    "run-time-svelte-hascontext": ["has context", "hascontext", "hasContext"],
    "run-time-svelte-getallcontexts": [
      "get all contexts",
      "get all context",
      "getallcontext",
      "getallcontexts",
    ],
    "run-time-svelte-createeventdispatcher": [
      "create event dispatcher",
      "event dispatcher",
      "create dispatcher",
    ],
    "run-time-svelte-store": ["store", "svelte store"],
    "run-time-svelte-store-writable": [
      "writable",
      "store writable",
      "svelte store writable",
    ],
    "run-time-svelte-store-readable": [
      "readable",
      "store readable",
      "svelte store readable",
    ],
    "run-time-svelte-store-derived": [
      "derived",
      "store derived",
      "svelte store derived",
    ],
    "run-time-svelte-store-get": ["store get", "get store", "svelte store get"],
    "run-time-svelte-motion": ["svelte motion", "run time motion", "motion"],
    "run-time-svelte-motion-tweened": [
      "svelte motion tweened",
      "run time tweened",
      "tweened",
      "motion tweened",
    ],
    "run-time-svelte-motion-spring": [
      "svelte motion spring",
      "run time spring",
      "spring",
      "motion spring",
    ],
    "run-time-svelte-transition": [
      "run time transition",
      "transition",
      "svelte transition",
    ],
    "run-time-svelte-transition-fade": [
      "fade transition",
      "transition fade",
      "run time fade",
      "fade",
    ],
    "run-time-svelte-transition-blur": [
      "blur transition",
      "blur fade",
      "run time blur",
      "blur",
    ],
    "run-time-svelte-transition-fly": [
      "fly transition",
      "fly fade",
      "run time fly",
      "fly",
    ],
    "run-time-svelte-transition-slide": [
      "slide transition",
      "transition slide",
      "run time slide",
      "slide",
    ],
    "run-time-svelte-transition-scale": [
      "scale transition",
      "scale fade",
      "run time scale",
      "scale",
    ],
    "run-time-svelte-transition-draw": [
      "draw transition",
      "transition draw",
      "run time draw",
      "draw",
    ],
    "run-time-svelte-transition-crossfade": [
      "crossfade transition",
      "transition crossfade",
      "run time crossfade",
      "crossfade",
    ],
    "run-time-svelte-animate": [
      "animate",
      "run time animate",
      "svelte animate",
      "run time svelte animate",
    ],
    "run-time-svelte-animate-flip": [
      "animate flip",
      "run time animate flip",
      "svelte animate flip",
      "run time svelte animate flip",
      "flip",
    ],
    "run-time-svelte-easing": ["easing", "run time easing", "svelte easing"],
    "run-time-svelte-register": ["register", "run time register", "svelte register"],
   "run-time-client-side-component-api": ["component api", "api", "client side api", "client side", "client side component", "client side component api"],
    "run-time-client-side-component-api-creating-a-component": ["create api component", "api component", "creating api component", "creating an api component"],
    "run-time-client-side-component-api-$set": ["$set", "api $set"],
    "run-time-client-side-component-api-$on": ["$on", "api $on"],
    "run-time-client-side-component-api-$destroy": ["$destroy", "api $destroy"],
    "run-time-client-side-component-api-component-props": ["api component props", "api props"],
    "run-time-custom-element-api": ["custom element", "custom element api"],
    "run-time-server-side-component-api": ["server side", "server side api", "server-side api"],
    "compile-time": ["compile time", "compile"],
    "compile-time-svelte-compile": ["svelte compile"],
    "compile-time-svelte-parse": ["svelte parse", "parse"],
    "compile-time-svelte-preprocess": ["svelte preprocess", "preprocess"],
    "compile-time-svelte-walk": ["svelte walk", "walk"],
    "compile-time-svelte-version": ["version", "svelte version"],
};
  export default searchDoc